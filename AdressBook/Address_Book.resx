<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="fileSystemWatcher1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEAIACoEAAAJgAAABAQAAABACAAaAQAAM4QAAAoAAAAIAAAAEAAAAABACAAAAAAAAAQ
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADAAAACwAAABMAAAAWAAAAFgAAABMAAAALAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABQAAABUAAAAsAAAAPQAAAEIAAABCAAAAPQAAACwAAAAXAAAAEAAAABMAAAAWAAAAFQAA
        AA4AAAAGAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AAsAAAATAAAAFgAAABYAAAAfAAAAOAA7qagARNT6AETa/wBF2v8ARdT6ADupqAAAAD0AAAA1AAAAPQAA
        AEMAAABAAAAAMwAAAB4AAAALAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAUAAAAVAAAALAAAAD0AAABCAAAAQgAAAEYARc7tAIbm/wDt//8A9P//APX//wDi/v8AeuP/AELL6AAz
        naIARNf/AEPW/wBE1/8AQMHRABtMWAAAACYAAAANAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADAAAAFgAAADYAOqioAEXU+gBE1v8ARtf/AEPO8QB87P8A7f//Guj//zzo//8/6v//HOj//wDs
        //8Ade3/ALv0/wD1//8A8///APX//wDJ+P8AZdz/ADKQhgAAACQAAAAJAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAwAAAAuAEbO7gCR6f8A6f//APT//wDf//8AZe//ANL//wTe//824v//aej//23p
        //864v//Btz//wDh//8A4f//E+H//znm//9B6f//Jej//wHi//8AYtv/AC+DcgAAABgAAAADAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAFABBtK8AeeT/Aeb//zDm//9B5f//Dd///wDV//8A1v//A9T//zHb
        //9f4///Y+P//zXc//8F0///ANT//wHU//8s2v//YuT//3Pn//9D4P//Ddz//wDR/v8AR8//AAAALAAA
        AAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAEjP/wDO//8K1f//V9///3Tl//8m1///AM///wDM
        //8AzP//EM///y/U//8w1v//FND//wDM//8Ay///AMz//yjT//9a3f//aOD//z7Y//8L0P//ANf//wFp
        4f8AP6igAAAAEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYASMv/ANH//wDH//8nzf//NtH//wvH
        //8AxP//AMX//wDG//8Axv//AMX//wDF//8Axv//AMb//wDE//8Aw///C8b//yzO//8yz///Gsn//wDE
        //8AzP//Bnz9/wBNy/kAAAAWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgBJyf8Ax///AL3//wC7
        //8Auv//ALv//wC8//8Awf//AMD//wDA//8AwP//AMD//wDA//8Awf//AL///wC8//8Au///ALr//wC6
        //8Au///AL3//wGy//8Lf///AFHO/wAAABYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAEnD5wGj
        +f8Atf//ALH//wCy//8As///BJj//wOt//8AvP//ALr//wC6//8Auv//ALr//wC8//8EqP//BKT//wC2
        //8AtP//ALT//wC2//8Auf//Co3//w2I//8AUcv/AAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAYAR7OhCXLo/wOm//8AqP//AKj//wKV//8Mf///C5L//wC3//8Atf//ALT//wC0//8Atf//ALj//wuS
        //8OiP//Aar//wCt//8Arf//ALD//wOJ//8NiP//DYn+/wBOx/8AAAANAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQBAnVgFZNb/EZX//wWa//8Dmf//D43//xCS//8QkP//B6L//wCw//8Ar///AK///wCx
        //8IpP//EZL//xCR//8Olf//AKX//wCm//8Dh///CXr//xGY//8Ic+T/AEy8sgAAAAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAFQBQwv8Un///F6b//xms//8SmP//Epn//xOZ//8UmP//Aqf//wCq
        //8Aq///AJ7//wJp//8Oiv//E5r//xOY//8ImP//BJj//xCO//8UnP//Ep3//wBRxv8AI1YXAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASAEq69hKa/P8cuf//G7b//xSh//8Uof//FaH//w6L
        //8Bb///AKX//wCj//8Ba///AF7//wqE//8Vov//FKD//xWg//8XqP//FKP//xal//8LgOf/AEm2sAAA
        AAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8ASLLWEJTz/ybY//8Uofr/Cnvf/xer
        //8WqP//GKn//wqA//8Bhv//Aob//wVv//8Dbv//FqT//xeo//8Wpv//FqX//yDG//8Xqv//GK7//wFV
        xv8AMXcvAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgBFqLYQjur/Jdf//wFa
        xP8ATb//GLD//xmw//8Zr///GrL//w2H//8KgP//CoH//wuF//8asv//Ga///xmw//8YrP//JtX//xiu
        //8TmvP/AEm45QAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARAEOdqRKT
        6P8IcND/AEmrpABFsZILfN//HLv//xu1//8btf//Fqj//w6P//8OkP//FKH//xu2//8cuP//C3vb/xu4
        //8n3f//G7f//w2D4P8ARKeQAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABUATq7cA2DB/wBMra4AAAADAAAACQBJv/8Zrvj/Hb///xy8//8dvf//FaH//xOf//8as///Hb7//x/F
        //8AQLX/DYPe/yHH//8ew///BWfL/wAzekgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
</value>
  </data>
</root>